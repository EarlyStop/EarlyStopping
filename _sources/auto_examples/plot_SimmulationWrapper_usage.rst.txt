
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_SimmulationWrapper_usage.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_SimmulationWrapper_usage.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_SimmulationWrapper_usage.py:


Usage of the SimulationWrapper class
============================================

We illustrate how the SimmulationWrapper class can be used to simplify 
the process of creating a Montecarlo simmulation for analying the performance of the Landweber method.

.. GENERATED FROM PYTHON SOURCE LINES 8-18

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    import seaborn as sns
    import EarlyStopping as es
    import pandas as pd

    np.random.seed(42)
    sns.set_theme()








.. GENERATED FROM PYTHON SOURCE LINES 19-21

Gererate synthetic data using the SimulationData class.
Other options besides diagonal_data include 'gravity', 'heat', 'deriv2', 'phillips'

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python

    design_smooth, response_noiseless_smooth, true_signal_smooth = es.SimulationData.diagonal_data(
        sample_size=1000, type="smooth"
    )








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Setup and verify the Simulation paramters for the Simulation

.. GENERATED FROM PYTHON SOURCE LINES 27-35

.. code-block:: Python

    parameters_smooth = es.SimulationParameters(
        design=design_smooth,
        true_signal=true_signal_smooth,
        true_noise_level=0.01,
        monte_carlo_runs=3,
        cores=3,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    UserWarning: PARAMETER WARNING: The design matrix is sparse. Escaping from __validate().




.. GENERATED FROM PYTHON SOURCE LINES 36-40

Create a SimulationWrapper object based on the SimulationParameters and run the simulation based on the desired estimation method.
The data_set_name parameter is optional and is used to save the results of the simulation.
Since the parameter is not specified, the results will not be saved
and are simply returned as a pd.DataFrame.

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: Python

    simulation_smooth = es.SimulationWrapper(**parameters_smooth.__dict__)
    simmulation_results = simulation_smooth.run_simulation_landweber(max_iteration=1000)

    pd.set_option("display.max_rows", None, "display.max_columns", None)  # Display all rows and columns of the DataFrame
    print(simmulation_results)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Running Monte-Carlo simulation for Landweber.
       strong_empirical_risk_es  weak_empirical_risk_es  weak_relative_efficiency  \
    0                 19.952893                0.087339                  0.742983   
    1                 23.146479                0.107895                  0.737363   
    2                 21.187514                0.097031                  0.759895   

       strong_relative_efficiency  \
    0                    0.898375   
    1                    0.890932   
    2                    0.889724   

                                            strong_bias2  \
    0  [9182.427732573386, 4665.676312893388, 3697.39...   
    1  [9182.427732573386, 4665.676312893388, 3697.39...   
    2  [9182.427732573386, 4665.676312893388, 3697.39...   

                                         strong_variance  \
    0  [0.0, 0.0007485470860550343, 0.002456820157913...   
    1  [0.0, 0.0007485470860550343, 0.002456820157913...   
    2  [0.0, 0.0007485470860550343, 0.002456820157913...   

                                             strong_risk  \
    0  [9182.427732573386, 4665.677061440474, 3697.40...   
    1  [9182.427732573386, 4665.677061440474, 3697.40...   
    2  [9182.427732573386, 4665.677061440474, 3697.40...   

                                              weak_bias2  \
    0  [3716.6807943847025, 557.7151148768934, 316.87...   
    1  [3716.6807943847025, 557.7151148768934, 316.87...   
    2  [3716.6807943847025, 557.7151148768934, 316.87...   

                                           weak_variance  \
    0  [0.0, 0.00016439345666815605, 0.00028498358854...   
    1  [0.0, 0.00016439345666815605, 0.00028498358854...   
    2  [0.0, 0.00016439345666815605, 0.00028498358854...   

                                               weak_risk  \
    0  [3716.6807943847025, 557.71527927035, 316.8717...   
    1  [3716.6807943847025, 557.71527927035, 316.8717...   
    2  [3716.6807943847025, 557.71527927035, 316.8717...   

                                               residuals  discrepancy_stop  \
    0  [3718.3327812372677, 558.0901478259906, 317.01...               273   
    1  [3715.9371777596866, 557.306219720411, 316.583...               270   
    2  [3716.7133946758336, 557.4296163744252, 316.75...               269   

       balanced_oracle_weak  balanced_oracle_strong  
    0                   325                     312  
    1                   325                     312  
    2                   325                     312  





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.610 seconds)


.. _sphx_glr_download_auto_examples_plot_SimmulationWrapper_usage.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_SimmulationWrapper_usage.ipynb <plot_SimmulationWrapper_usage.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_SimmulationWrapper_usage.py <plot_SimmulationWrapper_usage.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_SimmulationWrapper_usage.zip <plot_SimmulationWrapper_usage.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
